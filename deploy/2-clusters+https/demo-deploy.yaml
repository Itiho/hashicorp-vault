apiVersion: v1
kind: ServiceAccount
metadata:
  name: demo-app
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "demo-app-binding"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: "demo-app"
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: default
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: demo-app 
  template:
    metadata:
      labels:
        app: demo-app 
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "demo"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-inject-secret-demo: "secrets/demo"
        vault.hashicorp.com/agent-inject-template-demo: |
          {{ with secret "secrets/demo" }}{{ range $k, $v := .Data }}
          export {{ $k }}={{ $v }}
          {{ end }}{{ end }}
    spec:
      serviceAccountName: demo-app
      containers:
      - name: demo-app
        image: nginx
        args:
            ['sh', '-c', '. /vault/secrets/demo && echo "user=$user<br>pass=$pass>" > /usr/share/nginx/html/index.html && nginx -g "daemon off;"']
        ports:
          - protocol: TCP
            containerPort: 80
